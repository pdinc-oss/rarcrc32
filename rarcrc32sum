#!/usr/bin/env python3

import sys, binascii

def crc32_file(path):
    crc = 0
    with open(path, "rb") as f:
        for chunk in iter(lambda: f.read(65536), b""):
            crc = binascii.crc32(chunk, crc)
    return crc & 0xffffffff

def crc32_stdin():
    crc = 0
    for chunk in iter(lambda: sys.stdin.buffer.read(65536), b""):
        crc = binascii.crc32(chunk, crc)
    return crc & 0xffffffff

args = sys.argv[1:]
if not args:
    print(f"{crc32_stdin():08X}")
else:
    for path in args:
        try:
            print(f"{crc32_file(path):08X}\t{path}")
        except FileNotFoundError:
            print(f"Error:\t{path}", file=sys.stderr)
